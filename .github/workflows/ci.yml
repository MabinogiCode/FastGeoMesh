name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test with coverage
        run: |
          dotnet test --configuration Release --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory ./tests/TestResults \
            --logger trx \
            --verbosity normal

      - name: Debug Coverage Files
        run: |
          echo "=== Searching for coverage files ==="
          find . -name "*coverage*.xml" -type f || echo "No coverage files found"
          echo "=== Listing ./tests/TestResults ==="
          ls -la ./tests/TestResults/ || echo "TestResults directory not found"

      - name: Upload coverage artifacts (Cobertura)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-cobertura
          path: "**/coverage.cobertura.xml"
          if-no-files-found: error

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: "**/coverage.cobertura.xml"
          flags: unittests
          fail_ci_if_error: true
          verbose: true
          name: fastgeomesh-coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmarks:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build benchmarks
        run: dotnet build benchmarks/FastGeoMesh.Benchmarks --configuration Release --no-restore
      - name: Run rectangle vs tessellation benchmarks
        run: dotnet run --project benchmarks/FastGeoMesh.Benchmarks -c Release -- rectangle
      - name: Run mesh size benchmarks
        run: dotnet run --project benchmarks/FastGeoMesh.Benchmarks -c Release -- size
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmarks/FastGeoMesh.Benchmarks/BenchmarkDotNet.Artifacts/**/*
