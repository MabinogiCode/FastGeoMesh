root = true

[*.cs]
# Formatting (IDE0055) disabled per request
dotnet_diagnostic.IDE0055.severity = none

# Unused private member (IDE0052)
dotnet_diagnostic.IDE0052.severity = error

# Use compound assignment (IDE0054)
dotnet_diagnostic.IDE0054.severity = error

# Expression value not used (IDE0058) now disabled
dotnet_diagnostic.IDE0058.severity = none

# Namespace style (IDE0160) – prefer block scoped
dotnet_diagnostic.IDE0160.severity = error
csharp_style_namespace_declarations = block_scoped:error

# Bracing rules
csharp_prefer_braces = true:error
# Force braces for single-line statements (Roslyn IDE0011)
dotnet_diagnostic.IDE0011.severity = error
# New line before else for clarity
csharp_new_line_before_else = true

# StyleCop strict brace consistency
dotnet_diagnostic.SA1503.severity = error
# StyleCop consistent braces formatting
dotnet_diagnostic.SA1520.severity = error

# S1244 equivalent - Unused variables and parameters (STRICT enforcement)
# Unused variable (equivalent to S1244)
dotnet_diagnostic.IDE0059.severity = error
dotnet_diagnostic.CS0168.severity = error
dotnet_diagnostic.CS0219.severity = error
# Unused parameter (part of S1244 scope)
dotnet_diagnostic.IDE0060.severity = error

# S1244 SonarSource - Float/double comparison enforcement (the REAL S1244)
# Note: .NET analyzers don't have direct equivalent, but we can use CA1065 for custom rules
# For now, we'll implement manual fixes and document the pattern

# Prefer discards for intentionally unused values
csharp_style_unused_value_expression_statement_preference = discard_variable:error
csharp_style_unused_value_assignment_preference = discard_variable:error

csharp_new_line_before_open_brace = all
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_prefer_braces = true:error
